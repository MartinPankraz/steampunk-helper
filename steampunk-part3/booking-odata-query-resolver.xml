<!--
    GraphQL Resolver for SAP ABAP Cloud OData API. See SAP Community blog series to learn more: https://blogs.sap.com/2023/06/06/kick-start-your-sap-abap-platform-integration-journey-with-microsoft/

    Find additional SAP policies for SAP token caching, SAP Principal Propagation and CSRF token handling here: https://github.com/Azure/api-management-policy-snippets/blob/master/examples/Request%20OAuth2%20access%20token%20from%20SAP%20using%20AAD%20JWT%20token.xml
-->
<http-data-source>
	<http-request>
		<set-method>GET</set-method>
		<set-url>@($"https://[your-Azure-APIM-domain]/sap/opu/odata/sap/ZEVENT_UI_BOOKING_ODATA_V2/BOOKING(TravelID='{context.GraphQL.Arguments["TravelID"]}',IsActiveEntity=true)?$format=json")</set-url>
		<!-- avoid "br" encoding -->
		<set-header name="Accept-Encoding" exists-action="override">
			<value>gzip, deflate</value>
		</set-header>
		<set-header name="Authorization" exists-action="override">
			<value>@(context.Request.Headers.GetValueOrDefault("Authorization"))</value>
		</set-header>
	</http-request>
	<http-response>
		<!-- process nested OData JSON response from SAP for GraphQL -->
		<set-body template="liquid">
        {
            "TravelID": "{{body.d.TravelID}}",
            "Description": "{{body.d.Description}}",
            "OverallStatus": "{{body.d.OverallStatus}}"
        }         
        </set-body>
	</http-response>
</http-data-source>